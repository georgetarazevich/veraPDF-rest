name: Config option tests - ghcr.io/verapdf/rest:dev

on:
  schedule:
    - cron: "05 04 * * *"
  push:

jobs:
  test:
    name: Config option tests running in Docker container
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      verarest:
        image: ghcr.io/verapdf/rest:dev
        ports:
          - 8080:8080
    steps:
      - uses: actions/checkout@v3

      - name: Preparing Linux packages(Docker, Bats-core and more ...)
        if: runner.os == 'Linux'
        run: |
          echo pwd: $PWD
          mkdir ./results
          echo dir: $(ls ./)

          apt-get update -y
          apt install git -y

          git --version

          # Add Docker's official GPG key:

          apt-get update
          apt-get install ca-certificates curl gnupg
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          chmod a+r /etc/apt/keyrings/docker.gpg
            
          # Add the repository to Apt sources:
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update

          apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

          docker run hello-world

          docker -v
          docker ps

          cd ./tests

          echo "Adding: bats-core.git, bats-support.git and bats-assert.git"
          git clone https://github.com/bats-core/bats-core.git ./bats
          git clone https://github.com/bats-core/bats-support.git ./bats-support
          git clone https://github.com/bats-core/bats-assert.git ./bats-assert

          ./bats/bin/bats -v

      - name: Config option ... running tests
        run: |
          echo pwd: $PWD
          echo dir: $(ls ./)
          ./bats/bin/bats -r ./Options --output ./results

      - name: Generating report
        uses: actions/upload-artifact@v1
        if: success() || failure()
        with:
          name: Results
          path: "./results"
